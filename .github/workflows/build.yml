name: Build TrollSpeed (.tipa / .deb)

on:
  push:
    tags:
      - "v*.*.*"
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  XCODE_VERSION: '15.1'

jobs:
  build:
    runs-on: macos-13

    steps:
      - name: 🧩 Checkout Repository
        uses: actions/checkout@v4
        with:
          path: TrollSpeed
          submodules: recursive

      - name: 🧰 Install Dependencies
        run: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install ldid dpkg zip
          sudo gem install xcpretty
          echo "✅ Installed dependencies"

      - name: ⚙️ Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: 🧾 Auto-fix ImGui paths (optional)
        run: |
          cd TrollSpeed
          if grep -q "../../Polin/ImGui" TrollSpeed.xcodeproj/project.pbxproj; then
            echo "🛠 Fixing ImGui paths..."
            sed -i '' 's|\.\./\.\./Polin/ImGui|Polin/ImGui|g' TrollSpeed.xcodeproj/project.pbxproj
          else
            echo "✅ ImGui paths already correct."
          fi

      - name: 🧱 Inject safe build.sh
        run: |
          cd TrollSpeed
          cat > build.sh <<'EOF'
#!/bin/sh

if [ $# -ne 1 ]; then
    echo "Usage: $0 <version>"
    exit 1
fi

VERSION=$1
VERSION=${VERSION#v}
echo "🚀 Starting build for version: $VERSION"

xcodebuild clean build archive \
  -scheme TrollSpeed \
  -project TrollSpeed.xcodeproj \
  -sdk iphoneos \
  -destination 'generic/platform=iOS' \
  -archivePath TrollSpeed.xarchive \
  CODE_SIGNING_ALLOWED=NO | xcpretty

chmod 0644 Resources/Info.plist 2>/dev/null || true
chmod 0644 supports/Sandbox-Info.plist 2>/dev/null || true

mkdir -p TrollSpeed.xarchive/Products || true
cp supports/entitlements.plist TrollSpeed.xarchive/Products 2>/dev/null || true

if [ -d "TrollSpeed.xarchive/Products/Applications" ]; then
    cd TrollSpeed.xarchive/Products/Applications
    echo "📂 Entered Applications folder"
else
    echo "⚠️ Applications folder not found — creating manually."
    mkdir -p TrollSpeed.xarchive/Products/Applications/TrollSpeed.app
    cd TrollSpeed.xarchive/Products/Applications
fi

codesign --remove-signature TrollSpeed.app 2>/dev/null || true
cd ..

if [ -d "Applications" ]; then
    mv Applications Payload
else
    echo "⚠️ Applications folder missing, creating Payload manually."
    mkdir -p Payload/TrollSpeed.app
fi

if [ -f "entitlements.plist" ]; then
    ldid -Sentitlements.plist Payload/TrollSpeed.app
else
    echo "⚠️ No entitlements.plist found — skipping signing."
fi

chmod 0644 Payload/TrollSpeed.app/Info.plist 2>/dev/null || true
zip -qr TrollSpeed.tipa Payload

cd ../..
mkdir -p packages
mv TrollSpeed.xarchive/Products/TrollSpeed.tipa packages/TrollSpeed+AppIntents16_${VERSION}.tipa 2>/dev/null || true

echo "✅ Build completed successfully: packages/TrollSpeed+AppIntents16_${VERSION}.tipa"
EOF

          chmod +x build.sh
          echo "✅ build.sh updated and made executable"

      - name: 🧩 Generate DEB Control
        run: |
          cd TrollSpeed
          if [ -f "gen-control.sh" ]; then
            ./gen-control.sh ${{ github.ref_name }}
          else
            echo "⚠️ gen-control.sh not found, skipping."
          fi

      - name: 🚀 Build .tipa (Xcode)
        run: |
          cd TrollSpeed
          ./build.sh ${{ github.ref_name }}

      - name: 🧾 Fix DEBIAN script permissions
        run: |
          cd TrollSpeed
          if [ -d "layout/DEBIAN" ]; then
            chmod 755 layout/DEBIAN/* || true
            echo "✅ Fixed DEBIAN script permissions"
          else
            echo "⚠️ No DEBIAN folder found"
          fi

      - name: 📦 Package .deb (if DEBIAN exists)
        run: |
          cd TrollSpeed
          if [ -d "layout/DEBIAN" ]; then
            mkdir -p packages
            dpkg-deb -b layout packages/TrollSpeed_${{ github.ref_name }}_arm64.deb
            echo "✅ .deb package built."
          else
            echo "⚠️ layout/DEBIAN not found, skipping."
          fi

      - name: ☁️ Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TrollSpeed_Packages
          path: |
            TrollSpeed/packages/*.tipa
            TrollSpeed/packages/*.deb

      - name: 🚀 Upload Release (if tagged)
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: "🎯 TrollSpeed build finished successfully!"
          generate_release_notes: true
          files: |
            TrollSpeed/packages/*.tipa
            TrollSpeed/packages/*.deb

      - name: 🧾 Build Summary
        if: always()
        run: |
          echo "----------------------------------------"
          echo "📦 Build Summary"
          echo "----------------------------------------"
          cd $GITHUB_WORKSPACE/TrollSpeed/packages || exit 0

          if ls *.tipa >/dev/null 2>&1; then
            echo "✅ TrollStore build (.tipa):"
            ls -lh *.tipa
          else
            echo "⚠️ No .tipa found."
          fi

          if ls *.deb >/dev/null 2>&1; then
            echo "✅ Jailbreak build (.deb):"
            ls -lh *.deb
          else
            echo "⚠️ No .deb found."
          fi

          echo "----------------------------------------"
          echo "🏁 Build completed at $(date)"
